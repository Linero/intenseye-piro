{"version":3,"sources":["ml/modelBase.js","ml/faceDetection.js","utils/imutils.js","ml/emotionDetection.js","ml/ageGender.js","Result.js","App.js","serviceWorker.js","index.js"],"names":["ModelBase","modelPath","_this","this","Object","classCallCheck","loadModel","tf","then","model","console","log","concat","input","shape","catch","FaceDetector","possibleConstructorReturn","getPrototypeOf","call","faceapi","tinyFaceDetector","load","detectFace","dets","resize","img","size","tensor","fromPixels","_tensor$shape","slicedToArray","height","width","resizeBilinear","rgb2greyscale","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","minT","maxT","data","_data$map","_data$map2","min","max","normalized","grayscale","wrap","_context","prev","next","Promise","all","sent","map","d","dispose","sub","div","mean","abrupt","expandDims","stop","_x","apply","arguments","EmotionDetector","JSON","stringify","emotions","0","1","2","3","4","5","6","predict","resized","grayscale_image","prediction","values","result","reshape","forEach","value","index","push","label","AgeGenderDetector","greyscale","Result","react_default","createElement","className","style","App","faceDetector","emotionDetector","ageGenderDetector","webcam","React","createRef","canvas","timer","newLink","state","emotionPredictions","gender","modelsLoaded","webcamAllowed","counter","link","adIndex","delay","ms","_","setTimeout","connectToWebcam","navigator","mediaDevices","getUserMedia","video","stream","current","srcObject","setState","err","Error","face","_ref2","_ref3","genderPrediction","length","t0","renderApp","color","_ref4","src_Result_0","key","_this2","throttle","adDisplay","clearInterval","interval","_this3","setInterval","Math","floor","random","seconds","id","autoPlay","ref","display","src","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.427493d0.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\n\nexport default class ModelBase {\n  constructor(modelPath) {\n    this.modelPath = modelPath;\n  }\n\n  loadModel = () => tf.loadLayersModel(this.modelPath)\n    .then((model) => {\n      this.model = model;\n      console.log(`Loaded model with shape: ${model.input.shape}`)\n    })\n    .catch(console.log);\n}\n","import * as faceapi from 'face-api.js'\nimport ModelBase from \"./modelBase\";\n\nexport default class FaceDetector extends ModelBase  {\n  constructor() {\n    super('https://s3.amazonaws.com/intenseye-workshop/face_detector');\n  }\n\n  loadModel = () => {\n    return faceapi.nets.tinyFaceDetector.load(this.modelPath)\n  };\n\n  detectFace = input => {\n    return faceapi\n      .detectAllFaces(input, new faceapi.TinyFaceDetectorOptions())\n      .then(dets => faceapi.extractFaces(input, dets))\n  }\n\n}\n","import * as tf from '@tensorflow/tfjs'\n\nexport const resize = (img, size) => {\n  // convert image to tensor\n  const tensor = tf.browser.fromPixels(img);\n  const [height, width] = tensor.shape;\n\n  if (height === size && width === size) {\n    return tensor\n  }\n  // resize the image and with alignCorners parameter set to true\n  return tf.image.resizeBilinear(tensor, [size, size], true)\n};\n\nexport const rgb2greyscale = async tensor => {\n  const minT = tensor.min();\n  const maxT = tensor.max();\n  const data = await Promise.all([minT.data(), maxT.data()]);\n  const [min, max] = data.map(d => d[0]);\n  minT.dispose();\n  maxT.dispose();\n  // Convert the elements from [0, 255] -> [0, 1]\n  const normalized = tensor.sub(tf.scalar(min)).div(tf.scalar(max - min))\n\n  // get mean of r, g, b values\n  const grayscale = normalized.mean(2);\n\n  // expand the dimensions to keep the shape as (h, w, 1)\n  return grayscale.expandDims(2)\n};\n","import ModelBase from './modelBase';\nimport {resize, rgb2greyscale} from '../utils/imutils';\n\nexport default class EmotionDetector extends ModelBase {\n\n  constructor() {\n    super(JSON.stringify('ml/model.json'));\n  // super('https://s3.amazonaws.com/intenseye-workshop/emotion/model.json')\n\n  }\n\n  emotions = {\n    0: 'Angry',\n    1: 'Disgusted',\n    2: 'Fearful',\n    3: 'Happy',\n    4: 'Sad',\n    5: 'Surprised',\n    6: 'Neutral',\n  };\n\n  predict = async (img) => {\n    const resized = resize(img, 48);\n    const grayscale_image = await rgb2greyscale(resized);\n    const input = grayscale_image.reshape([1, 48, 48, 1]);\n    const prediction = this.model.predict(input);\n    const values = await prediction.data();\n    const result = [];\n    values.forEach((value, index) => result.push({ label: this.emotions[index], value }));\n    return result\n  }\n}\n","import ModelBase from \"./modelBase\";\nimport {resize, rgb2greyscale} from \"../utils/imutils\";\n\nexport default class AgeGenderDetector extends ModelBase {\n\n  constructor() {\n    super('https://s3.amazonaws.com/intenseye-workshop/age_gender2/model.json');\n\n  }\n\n  predict = async (img) => {\n    // resize image to shape of 64 x 64\n    const resized = resize(img, 64);\n    // convert it to greyscale and reduce the num of channels to 1\n    const greyscale = await rgb2greyscale(resized);\n    const input = greyscale.reshape([1, 64, 64, 1]);\n    const prediction = this.model.predict(input);\n    // the data() function is an asynchronous function but if you wish to\n    // just see the data without asynchronicity you can call dataSync()\n    return prediction.data()\n  }\n}\n","import React from 'react';\nimport './Result.css';\n\nconst Result = ({ label, value }) => (\n  <div className=\"result\">\n    <span className=\"result__label\">{label}</span>\n    <div style={{ width: value > 0.01 ? value * 150 : 0 }} className=\"result__value\" />\n  </div>\n);\n\nexport default Result;\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport FaceDetector from './ml/faceDetection';\nimport EmotionDetector from './ml/emotionDetection';\nimport AgeGenderDetector from './ml/ageGender';\nimport './App.css';\nimport Result from \"./Result\";\n\nclass App extends Component {\n  faceDetector = new FaceDetector();\n  emotionDetector = new EmotionDetector();\n  ageGenderDetector = new AgeGenderDetector();\n  webcam = React.createRef();\n  canvas = React.createRef();\n  timer = 0;\n \n  newLink = \"images/man/0.jpg\"\n  state = {\n    emotionPredictions: [],\n    gender: null,\n    modelsLoaded: false,\n    webcamAllowed: null,\n    counter: 10,\n    link: \"images/man/0.jpg\",\n    adIndex: 0\n  };\n\n  delay = ms => new Promise(_ => setTimeout(_, ms));\n\n  connectToWebcam = () => {\n    if (navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia({video: true})\n        .then((stream) => {\n          this.webcam.current.srcObject = stream;\n          this.setState({ webcamAllowed: true });\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({ webcamAllowed: false })\n          throw new Error('webc')\n        });\n    }\n  };\n\n  componentDidMount() {\n    Promise.all([\n      this.faceDetector.loadModel(),\n      this.emotionDetector.loadModel(),\n      this.ageGenderDetector.loadModel(),\n    ])\n      .then(() => this.setState({ modelsLoaded: true }))\n      .then(this.connectToWebcam)\n      // wait for it to initialize and start capturing\n      .then(() => this.delay(1000))\n      // use throttling to reduce the load on the client\n      .then(_.throttle(this.detectFace, 50))\n      .catch(console.log)\n\n      this.adDisplay();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n    clearInterval(this.timer)\n  }\n\n\n  detectFace = async () => {\n    try {\n      const face = await this.faceDetector.detectFace(this.webcam.current);\n      if (face.length > 0) {\n        const emotionPredictions = await this.emotionDetector.predict(face[0]);\n        const [genderPrediction] = await this.ageGenderDetector.predict(face[0]);\n        if (emotionPredictions != null) {\n          this.setState({ emotionPredictions })\n        }\n        if (genderPrediction != null) {\n          // if the confidence is less than 60% just ignore it\n          if (genderPrediction > 0.40 && genderPrediction < 0.60) {\n            return this.detectFace();\n          }\n          const gender = genderPrediction < 0.50 ? 'Male' : 'Female';\n          this.setState({ gender });\n        }\n      }\n      return this.detectFace();\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n\n  renderApp = (color) => {\n    if (!this.state.webcamAllowed) {\n      return null;\n    }\n    return (\n      <div className=\"result-wrapper\">\n        {this.state.gender && (\n          <div>\n            <span>Gender: </span>\n            <span style={{color}}>{this.state.gender}</span>\n          </div>\n        )}\n        {this.state.emotionPredictions.map(({ label, value }) => <Result key={label} label={label} value={value}/>)}\n      </div>\n    );\n  }\n\n  adDisplay(){\n   \n    this.timer = setInterval(()=>{\n      const index = Math.floor(Math.random()*6);\n      let seconds = this.state.counter - 1;\n      if(seconds <= 0) {\n        seconds = 10;\n          if(this.state.gender === 'Male'){\n            this.newLink = \"images/man/\" + index +\".jpg\";\n            this.adIndex = index;\n            this.setState({\n              link: this.newLink,\n              adIndex: index\n              });\n          }\n          else if (this.state.gender === 'Female'){\n            this.newLink = \"images/woman/\" + index+\".jpg\";\n            this.setState({\n              link: this.newLink,\n            adIndex: index\n            });\n          }\n      }\n\n      this.setState({\n        counter: seconds,\n      });\n\n    },1000)\n\n  }\n\n  render() {\n    const color = this.state.gender === 'Male' ? '#00a8ff' : '#e056fd';\n    return (\n      <div className=\"App\">\n        <div className=\"App-container\">\n          {this.state.webcamAllowed === false && <h4 style={{ color: '#EA2027' }}>allow webcam access...</h4>}\n          <h2 style={{color: 'orange'}}>PIRO - Emotion & Gender</h2>\n          <div id=\"container\">\n            {this.state.modelsLoaded ? <video autoPlay width={640} height={480} ref={this.webcam} id=\"videoElement\" /> : <span>Downloading models...</span>}\n            {this.renderApp(color)}\n          </div>\n          <div>\n          {this.state.webcamAllowed ? \n                        <div>\n                        <div>\n                        <p style={{display: 'inline'}}>Time: {this.state.counter} AD nr: {this.state.adIndex} next for: </p>\n                        <p style={{color,display: 'inline'}}>{this.state.gender}</p>\n                        \n                        \n                        </div>\n                        <div>\n                        <img src={this.state.link} alt=\"\" width=\"1000\"></img>\n                        </div>\n                        </div>\n            \n           : \"\"}\n\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}